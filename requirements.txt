import os
import logging
import sys

# Add library path first
sys.path.insert(0, '/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages')

# Configure logging
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(name)

# Import telegram modules
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# توکن رباتت رو از متغیر محیطی یا اینجا وارد کن
BOT_TOKEN = os.getenv("BOT_TOKEN", "YOUR_BOT_TOKEN_HERE")

# گزینه‌های منو
main_menu = [
    ["📦 خرید اشتراک ربات", "🧪 تست رایگان ربات"],
    ["🎥 ویدیو عملکرد ربات", "📞 ارتباط با پشتیبانی"],
    ["📘 راهنمای استفاده", "❓ سوالات متداول"]
]

# پیام‌های ثابت
welcome_text = "سلام 👋\nبه پشتیبانی رسمی MaxTraderr خوش اومدی ✨\nلطفاً یکی از گزینه‌های زیر رو انتخاب کن 👇"

subscribe_text = """💳 برای خرید اشتراک ربات، لطفاً یکی از پلن‌های زیر رو انتخاب کنید:

1️⃣ ماهانه - 49$
2️⃣ سه‌ماهه - 129$
3️⃣ شش‌ماهه - 239$

برای پرداخت و فعال‌سازی به پشتیبانی پیام بده."""

trial_text = """🧪 برای دریافت تست رایگان ۷ روزه:

کافیه فقط یوزرنیم متاتریدر رو ارسال کنی به پشتیبانی تا اکانت تست برات فعال بشه ✨"""

video_text = """🎥 این هم ویدیوی عملکرد ربات ما:
https://t.me/maxtraderr/10"""

support_text = """📞 ارتباط با پشتیبانی:
@MaxTraderrSupport"""

guide_text = """📘 راهنمای استفاده از ربات:

1️⃣ فایل اکسپرت رو داخل متاتریدر بریز
2️⃣ روی چارت M1 یا H1 بنداز
3️⃣ اجازه بده معامله‌ها خودکار انجام بشن

سود و ضرر به صورت خودکار کنترل میشه."""

faq_text = """❓ سوالات متداول:

💠 آیا ربات روی همه‌ی بروکرها کار می‌کنه؟
➖ بله، روی اکثر بروکرها تست شده.

💠 آیا نیاز به VPS هست؟
➖ پیشنهاد میشه برای پایداری بهتر."""

help_text = """🤖 راهنمای استفاده از ربات پشتیبانی MaxTraderr:

دستورات موجود:
/start - شروع و نمایش منوی اصلی
/help - نمایش این راهنما

از منوی زیر می‌توانید گزینه‌های مختلف را انتخاب کنید:
• خرید اشتراک ربات
• تست رایگان ربات
• ویدیو عملکرد ربات
• ارتباط با پشتیبانی
• راهنمای استفاده
• سوالات متداول

برای کمک بیشتر با @MaxTraderrSupport در تماس باشید."""

# استارت ربات
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user = update.effective_user
        logger.info(f"User {user.id} ({user.username}) started the bot")
        
        await update.message.reply_text(
            welcome_text, 
            reply_markup=ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
        )
    except Exception as e:
        logger.error(f"Error in start command: {e}")
        await update.message.reply_text("خطایی رخ داده است. لطفاً دوباره تلاش کنید.")

# راهنما
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        await update.message.reply_text(
            help_text,
            reply_markup=ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
        )
    except Exception as e:
        logger.error(f"Error in help command: {e}")
        await update.message.reply_text("خطایی رخ داده است. لطفاً دوباره تلاش کنید.")# هندل پیام‌های کاربر
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        text = update.message.text.strip()
        user = update.effective_user
        
        logger.info(f"User {user.id} ({user.username}) sent: {text}")
        
        if text == "📦 خرید اشتراک ربات":
            await update.message.reply_text(subscribe_text)
        elif text == "🧪 تست رایگان ربات":
            await update.message.reply_text(trial_text)
        elif text == "🎥 ویدیو عملکرد ربات":
            await update.message.reply_text(video_text)
        elif text == "📞 ارتباط با پشتیبانی":
            await update.message.reply_text(support_text)
        elif text == "📘 راهنمای استفاده":
            await update.message.reply_text(guide_text)
        elif text == "❓ سوالات متداول":
            await update.message.reply_text(faq_text)
        else:
            await update.message.reply_text(
                "دستور نامعتبر بود. لطفاً از منوی زیر استفاده کن 👇", 
                reply_markup=ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
            )
    except Exception as e:
        logger.error(f"Error handling message: {e}")
        await update.message.reply_text("خطایی رخ داده است. لطفاً دوباره تلاش کنید.")

# هندل خطاها
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f"Exception while handling an update: {context.error}")
    
    if isinstance(update, Update) and update.message:
        try:
            await update.message.reply_text("متأسفانه خطایی رخ داده است. لطفاً دوباره تلاش کنید.")
        except Exception:
            pass

# اجرای ربات
def main():
    # بررسی توکن
    if not BOT_TOKEN or BOT_TOKEN == "7951072696:AAEmDDiXpnxgdTG6ZbBMTYCXgLYyeCqKlBA"
        print("❌ Error: Bot token is not set!")
        print("Please set BOT_TOKEN environment variable or edit the bot_working.py file")
        print("To get a bot token:")
        print("1. Go to @BotFather on Telegram")
        print("2. Use /newbot command")
        print("3. Follow the instructions")
        print("4. Copy the token and set it as BOT_TOKEN environment variable")
        return
    
    try:
        # ایجاد اپلیکیشن
        app = Application.builder().token(BOT_TOKEN).build()

        # اضافه کردن هندلرها
        app.add_handler(CommandHandler("start", start))
        app.add_handler(CommandHandler("help", help_command))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        app.add_error_handler(error_handler)

        print("🤖 MaxTraderr Support Bot is starting...")
        print("✅ Bot is running and ready to receive messages!")
        print()
        print("💡 To set profile photo manually:")
        print("   1. Go to @BotFather on Telegram")
        print("   2. Send /setuserpic command")
        print("   3. Select your bot")
        print("   4. Send the logo image file")
        print()
        
        # اجرای ربات
        app.run_polling()
        
    except Exception as e:
        logger.error(f"Fatal error: {e}")
        print(f"❌ Error starting bot: {e}")

if name == "main":
    main()
